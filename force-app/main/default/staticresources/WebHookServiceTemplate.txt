@RestResource(urlMapping='%path%/*')
global with sharing class %className% {

    @HttpPost
    global static Integer post() {
        RestRequest request = RestContext.request;
        Bot_Registration__c registration = getRegistrationByToken(request.requestURI.substringAfterLast(CalloutHelper.SLASH));
        BotRequestDelegator delegator = BotRequestDelegator.getDelegator(registration.System__c);
        delegator.delegate(request);
        return 200;
    }

    private static Bot_Registration__c getRegistrationByToken(String hashedToken) {
        List<Bot_Registration__c> registration = [
               SELECT System__c, WebHook_Path__c, Notify_On_Error__c, Token__c
               FROM Bot_Registration__c
               WHERE Hashed_Token__c = :hashedToken
               LIMIT 1
        ];
        if (registration.isEmpty()) {
            throw new BotRegistrationException(Label.NoBotRegistrationError);
        }
        return registration.get(0);
    }
}
